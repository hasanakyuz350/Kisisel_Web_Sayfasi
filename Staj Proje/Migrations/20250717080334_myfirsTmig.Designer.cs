// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Staj_Proje.DaTa;

#nullable disable

namespace Staj_Proje.Migrations
{
    [DbContext(typeof(dbconTexT))]
    [Migration("20250717080334_myfirsTmig")]
    partial class myfirsTmig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Staj_Proje.EnTiTy.AbouTMe", b =>
                {
                    b.Property<int>("abouTmeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("abouTmeID"));

                    b.Property<DateTime?>("UpdaTeTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("abouTme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("myBiography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mybiographyURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mypicTureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("abouTmeID");

                    b.ToTable("abouTMes");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.CaTegory", b =>
                {
                    b.Property<int>("caTegoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("caTegoryID"));

                    b.Property<DateTime?>("UpdaTeTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("abouTmeID")
                        .HasColumnType("int");

                    b.Property<string>("caTegoryname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mayDeleTed")
                        .HasColumnType("bit");

                    b.HasKey("caTegoryID");

                    b.HasIndex("abouTmeID");

                    b.ToTable("caTegories");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.CommenT", b =>
                {
                    b.Property<int>("commeTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("commeTID"));

                    b.Property<string>("adminbackcommenT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("auThormessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("auThorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("auThorsurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mayDeleTed")
                        .HasColumnType("bit");

                    b.Property<int>("projecTID")
                        .HasColumnType("int");

                    b.Property<DateTime>("wriTeTime")
                        .HasColumnType("datetime2");

                    b.HasKey("commeTID");

                    b.HasIndex("projecTID");

                    b.ToTable("commenTs");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.ConTacT", b =>
                {
                    b.Property<int>("conTacTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("conTacTID"));

                    b.Property<DateTime?>("answercommenTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("auThorIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firsTname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lasTname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("senTTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("subjecT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("conTacTID");

                    b.ToTable("conTacTss");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.Home", b =>
                {
                    b.Property<int>("homeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("homeID"));

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiTle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopprojecT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mypicTureURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortabouTme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subTiTle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updaTeTime")
                        .HasColumnType("datetime2");

                    b.HasKey("homeID");

                    b.ToTable("homes");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.MyprojecT", b =>
                {
                    b.Property<int>("projecTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("projecTID"));

                    b.Property<string>("TiTle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("caTegory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("demolink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripTion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("giThublink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("homeID")
                        .HasColumnType("int");

                    b.Property<bool>("mayDeleTed")
                        .HasColumnType("bit");

                    b.Property<string>("projecTImageURl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shorTdecripTion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updaTeTime")
                        .HasColumnType("datetime2");

                    b.HasKey("projecTID");

                    b.HasIndex("homeID");

                    b.ToTable("myprojecTs");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.CaTegory", b =>
                {
                    b.HasOne("Staj_Proje.EnTiTy.AbouTMe", "AbouTMe")
                        .WithMany("myTalenT")
                        .HasForeignKey("abouTmeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AbouTMe");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.CommenT", b =>
                {
                    b.HasOne("Staj_Proje.EnTiTy.MyprojecT", "MyprojecT")
                        .WithMany("commenT")
                        .HasForeignKey("projecTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyprojecT");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.MyprojecT", b =>
                {
                    b.HasOne("Staj_Proje.EnTiTy.Home", "Home")
                        .WithMany("mylasTprojecT")
                        .HasForeignKey("homeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.AbouTMe", b =>
                {
                    b.Navigation("myTalenT");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.Home", b =>
                {
                    b.Navigation("mylasTprojecT");
                });

            modelBuilder.Entity("Staj_Proje.EnTiTy.MyprojecT", b =>
                {
                    b.Navigation("commenT");
                });
#pragma warning restore 612, 618
        }
    }
}
